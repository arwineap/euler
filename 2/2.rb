#!/usr/bin/env ruby
#
# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
#           1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.

def isEven(x)
    if x%2 == 0
        return 1
    end
    return 0
end

def fibto(fibend)
    runningcount = 0
    oldterm = 1
    newterm = 2
    if isEven(oldterm) == 1
        runningcount += oldterm
    end
    if isEven(newterm) == 1
        runningcount += newterm
    end
    while newterm < fibend do
        tmpv = newterm
        newterm += oldterm
        if newterm > fibend
            puts "RESULT: #{runningcount}"
            return runningcount
        end
        if isEven(newterm) == 1
            runningcount += newterm
        end
        puts newterm
        oldterm = tmpv
    end
end

fibto(4000000)
